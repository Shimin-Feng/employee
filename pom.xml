<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.shiminfxcvii</groupId>
    <artifactId>employee-management</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- 18 似乎指的是 JDK 版本 -->
    <!-- 如果改成 19 -->
    <!-- java: 错误: 不支持发行版本 19 -->
    <properties>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <!-- spring-boot 官方项目的某个配置 -->
        <!-- <thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>
		<thymeleaf-layout-dialect.version>2.1.1</thymeleaf-layout-dialect.version> -->
        <!-- 升级到 3.0.15 -->
        <thymeleaf.version>3.0.15.RELEASE</thymeleaf.version>
        <!-- 作用：向主页面引入子页面 -->
        <!--<thymeleaf-layout-dialect.version>3.0.15</thymeleaf-layout-dialect.version>-->
    </properties>

    <!-- 父引用 -->
    <!-- 如果是 spring-boot-parent 是否会报错？ -->
    <!-- 不会 -->
    <!-- 2022-4-7 今天从 2.6.4 升级到 2.6.5 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.7</version>
    </parent>

    <dependencies>

        <!-- spring-beans & jackson-databind dependencies 是因为报告以下信息而添加的 -->
        <!-- Provides transitive vulnerable dependency
         'com.fasterxml.jackson.core':jackson-databind:2.13.2 Out-of-bounds Write vulnerability pending CVSS allocation
         Provides transitive vulnerable dependency 'org.springframework':spring-beans:5.3.17 Improper Control of
         Generation of Code ('Code Injection') vulnerability pending CVSS allocation -->

        <!-- Provides transitive vulnerable dependency -->
        <!-- 2.13.2 Out-of-bounds Write vulnerability pending CVSS allocation -->
        <!-- Out-Of-Bounds Write -->
        <!-- Summary
         jackson-databind before 2.12.6.1 and 2.13.x before 2.13.2.1 allows a Java StackOverflow exception and denial
         of service via a large depth of nested objects. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.2.2</version>
        </dependency>

        <!-- MySQL 驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
        </dependency>

        <!-- 不知道有什么作用，是有一次编写代码使提示添加的 -->
        <!-- 知道了，是为了导入下面的包 -->
        <!-- import org.jetbrains.annotations.NotNull; -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>23.0.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- 简化实体类代码，省略 get() set() -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
        </dependency>

        <!-- Provides transitive vulnerable dependency -->
        <!-- 5.3.17 Improper Control of Generation of Code ('Code Injection') vulnerability pending CVSS allocation -->
        <!-- Dependency 5.3.17 is vulnerable -->
        <!-- Improper Control Of Generation Of Code ('Code Injection') -->
        <!-- Summary
         spring or spring-beans running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding.
         The specific exploit requires the application to run on Tomcat as a WAR deployment.
         If the application is deployed as a Spring Boot executable jar, i.e. the default,
         it is not vulnerable to the exploit. However, the nature of the vulnerability is more general,
         and there may be other ways to exploit it. This was fixed in versions 5.2.20 and 5.3.18. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>5.3.19</version>
        </dependency>

        <!-- 下面的依赖是为了能够使用到 JPA Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>2.6.7</version>
        </dependency>

        <!-- Spring 安全框架 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.6.7</version>
        </dependency>

        <!-- 单元测试依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.6.7</version>
        </dependency>

        <!-- 引入 Thymeleaf 模板 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <version>2.6.7</version>
        </dependency>

        <!-- Spring MVC -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.6.7</version>
        </dependency>

        <!-- 添加 thymeleaf 属性 -->
        <!-- 获取登录用户名 -->
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity5</artifactId>
            <version>3.0.4.RELEASE</version>
        </dependency>

    </dependencies>

</project>